<% provide(:title, @user.name) %>

<% current_user_json = current_user.as_json({ include: [], methods: %w[can_view_all_users? can_edit_any_user? can_admin_results?]})
   current_user_json["cannot_edit_data_reason_html"] = current_user.cannot_edit_data_reason_html(@user)
   current_user_json["can_change_users_avatar?"] = current_user.can_change_users_avatar?(@user)
%>

<% unless @recently_authenticated %>
  <div class="ui page modals transition visible active">
    <div class="ui small modal transition active" id="2fa-check" style="display: none; padding: 10px; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%)">
      <%= render "2fa_confirm" %>
    </div>
  </div>
<% end %>

<% otp_svg = raw(qrcode_for_user(@user).as_svg(
  offset: 0,
  color: '000',
  shape_rendering: 'crispEdges',
  module_size: 4
)) if @user.otp_required_for_login %>

<%= react_component("Persons/Edit", {
  user: @user.as_json({
                        include: [],
                        only: [:email, :id, :wca_id, :unconfirmed_email],
                        methods: [
                          :confirmed_at,
                          :unconfirmed_wca_id,
                          :delegate_to_handle_wca_id_claim,
                          :dummy_account?,
                          :cannot_register_for_competition_reasons,
                          :is_special_account?,
                          :preferred_events,
                          :staff_or_any_delegate?,
                          :name, :dob, :gender, :country_iso2,
                          :receive_delegate_reports, :delegate_reports_region,
                          :results_notifications_enabled, :registration_notifications_enabled,
                          :pending_avatar, :otp_required_for_login
                        ]
                      }),
  currentUser: current_user_json,
  editableFields: current_user.editable_fields_of_user(@user),
  recentlyAuthenticated: @recently_authenticated,
  otpSVG: otp_svg,
}) %>
