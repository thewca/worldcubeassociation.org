<% provide(:title, @person.name) %>

<%= react_component("Persons/Person", {
  person: {
    user: @person.user.as_json(only: [:id], methods: [:avatar], include: []),
    name: @person.name,
    wcaId: @person.wca_id,
    gender: @person.gender_visible? ? @person.gender : nil,
    countryIso2: @person.country_iso2,
    previousPersons: @previous_persons.as_json(only: [:name], methods: [:country_iso2], include: []),
    competitionCount: @person.competitions.count,
    completedSolves: @person.completed_solves_count,
  },
  results: @results.map { |result| {
    id: result.id,
    eventId: result.event_id,
    competition_id: result.competition_id,
    best: result.best,
    average: result.average,
    pos: result.pos,
    roundTypeId: result.roundTypeId,
    bestIdx: result.best_index,
    worstIdx: result.worst_index,
    attempts: result.attempts,
    singleRecord: result.regionalSingleRecord,
    averageRecord: result.regionalAverageRecord,
    trimmedIdx: result.trimmed_indices,
  }},
  competitions: @person.competitions.index_by(&:id).transform_values do |competition|
    competition.as_json(only: [:id, :name, :end_date, :cityName], methods: [:date_range, :latitude_degrees, :longitude_degrees], include: [])
  end,
  medals: @medals,
  records: @records,
  pbMarkers: @results.group_by(&:event_id).transform_values do |event_results|
    historical_pb_markers(event_results.reverse)
  end,
  championshipPodiums: @championship_podiums,
  singleRanks: @ranks_single.map { |r| {
    eventId: r.eventId,
    time: r.best,
    worldRank: r.worldRank,
    continentRank: r.continentRank,
    countryRank: r.countryRank,
  }},
  averageRanks: @ranks_average.map { |r| {
    eventId: r.eventId,
    time: r.best,
    worldRank: r.worldRank,
    continentRank: r.continentRank,
    countryRank: r.countryRank,
  }},
  canEditUser: current_user&.can_edit_user?(@person.user),
}) %>
