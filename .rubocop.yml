inherit_from: .rubocop_todo.yml

plugins:
  - rubocop-thread_safety
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec
  - rubocop-rspec_rails
  - rubocop-factory_bot
  - rubocop-capybara
  - rubocop-rake

AllCops:
  TargetRubyVersion: 3.4
  DisplayCopNames: true
  NewCops: enable
  Exclude:
    - 'node_modules/**/*'
    - 'bin/**/*'
    - 'vendor/**/*'
    # This file is provided as-is by Discourse
    - 'lib/single_sign_on.rb'
    # The schema files are dumped by Rails' ActiveRecord database engine and need to follow their formatting
    - 'db/schema.rb'
    - 'db/developer_dump_schema.rb'
    - 'db/results_dump_schema.rb'
    - '.git-hooks/**/*'

Style/StringConcatenation:
  # We need to use + here because it's a custom operator TODO: At least until we only render from NExt
  Exclude:
  - 'app/helpers/application_helper.rb'

Rails/RenderInline:
  Exclude:
    - 'app/controllers/regulations_controller.rb'

Rails/I18nLocaleAssignment:
  Exclude:
    - 'spec/support/locale_reset.rb'

Bundler/OrderedGems:
  Enabled: false

Lint/UnusedMethodArgument:
  Enabled: false

Style/Alias:
  EnforcedStyle: prefer_alias_method

Style/EmptyMethod:
  EnforcedStyle: expanded

Style/RedundantSelf:
  Enabled: false

Style/StringLiterals:
  # EnforcedStyle: double_quotes
  Enabled: false

Style/TrailingCommaInArguments:
  # If `comma`, the cop requires a comma after the last argument, but only for
  # parenthesized method calls where each argument is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last argument,
  # for all parenthesized method calls with arguments.
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  # If `comma`, the cop requires a comma after the last argument, but only for
  # parenthesized method calls where each argument is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last argument,
  # for all parenthesized method calls with arguments.
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  # If `comma`, the cop requires a comma after the last item in an array or
  # hash, but only when each item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item of all
  # non-empty array and hash literals.
  EnforcedStyleForMultiline: comma

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Max: 23

Metrics/ParameterLists:
  Max: 5
  CountKeywordArgs: false

Metrics/PerceivedComplexity:
  Max: 25

Layout/LineLength:
  Max: 245

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Style/AccessModifierDeclarations:
  Enabled: false

Style/BlockDelimiters:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/ClassVars:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/MultilineBlockChain:
  Enabled: false

Style/Next:
  Enabled: false

Style/PercentLiteralDelimiters:
  Enabled: false

Style/RaiseArgs:
  EnforcedStyle: compact

Style/SignalException:
  EnforcedStyle: only_raise

Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

Style/StringLiteralsInInterpolation:
  Enabled: false

Style/SymbolArray:
  Enabled: false

# This causes a bunch of false positives as of 2025-03-17
Rails/ActionControllerFlashBeforeRender:
  Enabled: false

# We currently have a couple enums that are defined with Arrays, disabling for now
Rails/EnumHash:
  Enabled: false

Style/WordArray:
  Enabled: false

Style/SymbolProc:
  AllowedMethods:
    # Capybara DSL plugins
    - with_playwright_element_handle
    - with_playwright_page
  Exclude:
    # 3rd-party libraries often use configuration DSLs
    #   that look like we might pass a proc, but actually we want to
    #   stick as close to their README as possible
    - 'config/initializers/**/*.rb'

Naming/MethodParameterName:
  AllowedNames:
    - n
    - id

Naming/PredicateName:
  AllowedMethods:
    # These are database columns
    - is_active?
    - is_hidden?
    # This one actually makes sense
    - has_permission?

Lint/EmptyFile:
  Exclude:
    - 'db/seeds.rb'

# We have too many event IDs and Comp Years with numbers in them
Naming/VariableNumber:
  Enabled: false

Style/OpenStructUse:
  Exclude:
    - 'spec/lib/middlewares/warden_user_logger_spec.rb'

Style/HashSyntax:
  EnforcedShorthandSyntax: never

Style/ArgumentsForwarding:
  RedundantBlockArgumentNames: []

# These are files where we accept in-memory caching as a trade-off
# for thread safety. At the time of writing this comment, WST is confident that these three
# implementations are either thread safe or don't suffer any problems from concurrent access.
ThreadSafety/ClassAndModuleAttributes:
  Exclude:
    - 'app/models/concerns/cachable.rb'
    - 'app/models/concerns/localized_sortable.rb'
    - 'app/models/regulation.rb'

ThreadSafety/DirChdir:
  AllowCallWithBlock: true

# These are a list of temporarily disabled cops so we can turn them on in batches

# Performance

Performance/CollectionLiteralInLoop:
  Enabled: false

Performance/MethodObjectAsBlock:
  Enabled: false

# Rails

Rails/TimeZone:
  Enabled: false

Rails/Date:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: false

Rails/InverseOf:
  Enabled: false

Rails/HasManyOrHasOneDependent:
  Enabled: false

Rails/OutputSafety:
  Enabled: false

Rails/I18nLocaleTexts:
  Enabled: false

Rails/HelperInstanceVariable:
  Enabled: false

Rails/UniqueValidationWithoutIndex:
  Enabled: false

# Rspec

RSpec/MultipleExpectations:
 Enabled: false

RSpec/ExampleLength:
 Enabled: false

RSpec/NoExpectationExample:
  Enabled: false

RSpec/IndexedLet:
  Enabled: false

RSpec/HookArgument:
  Enabled: false

RSpec/AnyInstance:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

RSpec/DescribeClass:
  Enabled: false

RSpec/ContextWording:
  Enabled: false

RSpec/SpecFilePathFormat:
  Enabled: false

RSpec/LetSetup:
  Enabled: false

RSpec/ChangeByZero:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/InstanceVariable:
  Enabled: false

RSpec/NestedGroups:
  Enabled: false

RSpec/BeforeAfterAll:
  Enabled: false

RSpec/MultipleMemoizedHelpers:
  Enabled: false

RSpec/ItBehavesLike:
  Enabled: false

RSpec/EmptyLineAfterExample:
  Enabled: false

RSpec/MatchArray:
  Enabled: false

RSpec/DescribedClass:
  Enabled: false

RSpec/VariableName:
  Enabled: false

RSpec/RepeatedDescription:
  Enabled: false

RSpec/ReceiveCounts:
  Enabled: false

RSpec/ContextMethod:
  Enabled: false

RSpec/BeNil:
  Enabled: false

RSpec/LetBeforeExamples:
  Enabled: false

RSpec/ExampleWording:
  Enabled: false

RSpec/Focus:
  Enabled: false

RSpec/ExpectInHook:
  Enabled: false

RSpec/PendingWithoutReason:
  Enabled: false

RSpec/MultipleDescribes:
  Enabled: false

RSpec/StubbedMock:
  Enabled: false

RSpec/SortMetadata:
  Enabled: false

RSpec/ScatteredSetup:
  Enabled: false

RSpec/ExcessiveDocstringSpacing:
  Enabled: false

RSpec/NamedSubject:
  Enabled: false

RSpec/Be:
  Enabled: false

RSpec/ScatteredLet:
  Enabled: false

RSpec/RepeatedExample:
  Enabled: false

RSpec/RepeatedExampleGroupDescription:
  Enabled: false

RSpec/ClassCheck:
  Enabled: false

RSpec/BeEmpty:
  Enabled: false

RSpecRails/NegationBeValid:
  Enabled: false

RSpecRails/InferredSpecType:
  Enabled: false
