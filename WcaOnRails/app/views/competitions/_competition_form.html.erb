<% add_to_packs("markdown_editor") %>
<% add_to_packs("auto_numeric") %>
<% add_to_packs("wca_maps") %>

<% is_actually_confirmed = @competition.persisted? ? Competition.find(@competition.id).confirmed? : false %>
<%= horizontal_simple_form_for @competition, html: { class: 'are-you-sure no-submit-on-enter', id: 'competition-form' } do |f| %>
  <% if @competition.persisted? %>
    <% if @competition_admin_view %>
      <%= hidden_field_tag :competition_admin_view, "1" %>

      <%= f.input :confirmed, as: :boolean %>
      <%= f.input :showAtAll %>
    <% else %>
      <% mail_to_wcat = mail_to Team.wcat.email, t(".wcat"), target: "_blank" %>
      <%= if is_actually_confirmed && @competition.showAtAll?
            alert :success, t('.public_and_locked_html')
          elsif is_actually_confirmed && !@competition.showAtAll?
            alert :warning, t('.confirmed_but_not_visible_html', contact: mail_to_wcat)
          elsif !is_actually_confirmed && @competition.showAtAll?
            alert :danger, t('.is_visible')
          elsif !is_actually_confirmed && !@competition.showAtAll?
            alert :warning, t('.pending_confirmation_html', contact: mail_to_wcat)
          end %>
        <% end %>
      <% end %>

      <% can_edit_competition = (@competition_admin_view || !is_actually_confirmed) %>
      <% disable_form = !can_edit_competition %>

      <fieldset <%= disable_form && "disabled" %>>

        <% if @competition.persisted? %>
          <%= f.input :id %>
        <% end %>
        <%= f.input :name, wrapper_html: { class: @competition.warnings_for(current_user)[:name] ? "has-warning" : "" } %>
        <% if @competition.persisted? %>
          <%= f.input :cellName %>
        <% end %>
        <%= f.input :name_reason, hint: t('.name_reason_html') %>

        <%= f.input :countryId, collection: Country.all_sorted_by(I18n.locale), label_method: lambda { |c| c.name }, value_method: lambda { |c| c.id }  %>
        <%= f.input :cityName %>
        <%= f.input :venue, hint: t('.venue_html', md: t('.supports_md_html')) %>
        <%= f.input :venueDetails, hint: t('.venue_details_html', md: t('.supports_md_html')) %>
        <%= f.input :venueAddress %>

        <div id="venue-map-wrapper">
          <div id="map"></div>
        </div>

        <div class="form-group <%= !@competition.errors[:latitude].empty? || !@competition.errors[:longitude].empty? ? "has-error" : "" %>">
          <label class="integer optional col-sm-2 control-label" for="competition_latitude">
            <%= t '.coordinates' %>
          </label>
          <div class="col-sm-9">
            <div class="input-group">
              <span class="input-group-addon">Latitude</span>
              <input type="text" data-ays-ignore-float-close="true" class="input-sm form-control" name="competition[latitude_degrees]" id="competition_latitude" value="<%= @competition.latitude_degrees %>" />
              <span class="input-group-addon">Longitude</span>
              <input type="text" data-ays-ignore-float-close="true" class="input-sm form-control" name="competition[longitude_degrees]" id="competition_longitude" value="<%= @competition.longitude_degrees %>" />
            </div>
            <span class="help-block"><%= f.error :latitude %></span>
            <span class="help-block"><%= f.error :longitude %></span>
          </div>
        </div>

        <script>
          (function() {
            var form_disabled = <%= disable_form.to_json %>;
            window.wca.setupVenueMap("map",
                $("#competition_latitude"),
                $("#competition_longitude"),
                <%= Competition::NEARBY_DISTANCE_KM_DANGER %>,
                <%= Competition::NEARBY_DISTANCE_KM_WARNING %>,
                form_disabled);

            window.wca.fetchNearbyCompetitions = function() {
              if (form_disabled) {
                // The user isn't allowed to change the location of the
                // competition, so there's no need to bother recomputing the nearby
                // competitions.
                return;
              }
              $("#nearby-competitions").addClass('loading');
              var obj = $("#competition-form").serializeJSON();

              window.wca.cancelPendingAjaxAndAjax('render_nearby_competitions', {
                url: '<%= nearby_competitions_path %>',
                data: {
                  <% if @competition_admin_view %>
                    'competition_admin_view': true,
                  <% end %>
                  'competition[id]': obj['competition[id]'],
                  'competition[latitude_degrees]': obj['competition[latitude_degrees]'],
                  'competition[longitude_degrees]': obj['competition[longitude_degrees]'],
                  'competition[start_date]': obj['competition[start_date]'],
                  'competition[end_date]': obj['competition[end_date]'],
                },
                success: function(data) {
                  $('#nearby-competitions').html(data);
                  $("#nearby-competitions").removeClass('loading');
                }
              });
              window.wca.cancelPendingAjaxAndAjax('render_time_until_competition', {
                url: '<%= time_until_competition_path %>',
                data: {
                  'competition[id]': obj['competition[id]'],
                  'competition[start_date]': obj['competition[start_date]'],
                  'competition[end_date]': obj['competition[end_date]'],
                },
                success: function(data) {
                  $('#time-until-competition').closest(".form-group").toggleClass('has-error', data.has_date_errors);
                  $('#time-until-competition').html(data.html);
                }
              });
            };
          })();
        </script>

        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-9">
            <div class="row datetimerange">
              <%= f.input :start_date, as: :date_picker, wrapper: :ranged_datetime %>
              <%= f.input :end_date, as: :date_picker, wrapper: :ranged_datetime %>
            </div>
            <span id="time-until-competition" class="help-block">
              <%= render "time_until_competition" %>
            </span>
          </div>
        </div>

        <script>
          $(".datetimepicker").on("dp.change", function(e) {
            window.wca.fetchNearbyCompetitions();
          });
        </script>

        <div id="nearby-competitions">
          <%= render "nearby_competitions" %>
        </div>

        <%= f.input :information, input_html: { class: disable_form ? "" : "markdown-editor" } %>
        <%= f.input :delegate_ids, as: :user_ids, only_delegates: true %>
        <%= f.input :trainee_delegate_ids, as: :user_ids, only_trainee_delegates: true %>
        <%= f.input :organizer_ids, as: :user_ids %>
        <%= f.input :contact, hint: t('.contact_html', md: t('.supports_md_html')) %>

        <hr>
        <%= f.input :generate_website %>
        <%= f.input :external_website %>
        <hr>

        <div class="championships">
          <%= f.simple_fields_for :championships, @competition.championships do |f2| %>
            <%= render "championship_fields", f: f2 %>
          <% end %>
        </div>
        <div class="row">
          <div class="col-sm-offset-2 col-sm-9">
            <%= link_to_add_association button_tag(raw("#{ui_icon("plus")} #{t('.add_championship')}"), type: "button", class: "btn btn-default"), f, :championships,
              data: { association_insertion_node: '.championships', association_insertion_method: 'append' } %>
          </div>
        </div>
        <hr>
        <%= f.input :use_wca_registration %>
        <%= f.input :external_registration_page %>

      </fieldset>

        <div class="wca-registration-options">
          <% if @competition.can_receive_registration_emails?(current_user.id) %>
            <%# Quick hack to fill receive_registration_emails with the correct value for the current_user %>
            <% @competition.receive_registration_emails = @competition.receiving_registration_emails?(current_user.id) %>
            <%= f.input :receive_registration_emails, as: :boolean %>
          <% end %>
        </div>

      <fieldset <%= disable_form && "disabled" %>>

        <div class="wca-registration-options">
          <%= f.input :enable_donations %>
          <%= f.input :guests_enabled, as: :radio_buttons, collection: [ :true, :false ] %>
        </div>

        <%= f.input :guests_entry_fee_lowest_denomination, as: :money_amount, currency: @competition.currency_code, currency_selector: "#competition_currency_code" %>

        <div class="guest-no-entry-fee-options">
          <%= f.input :free_guest_entry_status, include_blank: false %>
        </div>

        <div class="col-sm-offset-2 col-sm-9">
          <div class="row datetimerange">
            <%= f.input :registration_open, as: :datetime_picker, wrapper: :ranged_datetime %>
            <%= f.input :registration_close, as: :datetime_picker, wrapper: :ranged_datetime %>
          </div>
        </div>

        <%= f.input :competitor_limit_enabled, collection: [ :true, :false ] %>
        <div class="wca-competitor-limit-options">
          <%= f.input :competitor_limit %>
          <%= f.input :competitor_limit_reason %>
        </div>

        <% disable_money_input = !@competition.can_edit_registration_fees? %>
        <%= f.input :currency_code, collection: Money::Currency.table.values, label_method: lambda { |c| "#{c[:name]} (#{c[:iso_code]})" }, value_method: lambda { |c| c[:iso_code] }, disabled: disable_money_input  %>
        <%= f.input :base_entry_fee_lowest_denomination, as: :money_amount, currency: @competition.currency_code, disabled: disable_money_input, currency_selector: "#competition_currency_code" %>

        <%= f.input :refund_policy_percent %>
        <%= f.input :refund_policy_limit_date, as: :datetime_picker %>

        <%= f.input :waiting_list_deadline_date, as: :datetime_picker %>
        <%= f.input :event_change_deadline_date, as: :datetime_picker %>

        <%= f.input :on_the_spot_registration, collection: [ :true, :false ] %>
        <%= f.input :on_the_spot_entry_fee_lowest_denomination, as: :money_amount, currency: @competition.currency_code, currency_selector: "#competition_currency_code" %>

        <%= f.input :extra_registration_requirements, input_html: { class: disable_form ? "" : "markdown-editor" } %>

        <hr>
        <%= f.input :early_puzzle_submission %>
        <%= f.input :early_puzzle_submission_reason %>

        <%= f.input :qualification_results %>
        <%= f.input :qualification_results_reason %>

        <%= f.input :event_restrictions %>
        <%= f.input :event_restrictions_reason %>

        <% if !@competition.being_cloned_from.present? && @competition.events.any? %>
          <hr>
          <%= f.input :main_event_id do %>
            <%= f.select :main_event_id, options_for_select(@competition.events.map { |event| [event.name, event.id] }, @competition.main_event_id), { include_blank: "" }, { class: "form-control main-event" } %>
          <% end %>
        <% end %>

      </fieldset>

      <hr>
      <%= f.input :remarks, disabled: is_actually_confirmed %>

      <% if @competition.being_cloned_from&.tabs&.present? %>
        <%= f.input :being_cloned_from_id, as: :hidden %>
        <%= f.input :clone_tabs, as: :boolean %>
      <% end %>

      <hr>
      <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
          <% if @competition.persisted? %>
            <%= f.button :submit, t('.submit_update_value'), class: "btn-primary" %>
          <% else %>
            <%= f.button :submit, t('.submit_create_value'), class: "btn-primary" %>
          <% end %>

          <% if @competition.persisted? && !@competition_admin_view && !is_actually_confirmed && current_user.can_confirm_competition?(@competition) %>
            <%= button_tag(type: 'submit', name: "commit", value: "Confirm", class: "btn btn-warning", data: { confirm: t('.submit_confirm') }) do %>
              <%= t '.submit_confirm_value' %>
            <% end %>
          <% end %>

          <% if @competition.persisted? %>
            <% unless current_user.get_cannot_delete_competition_reason(@competition) %>
              <%= button_tag(type: 'submit', name: "commit", value: "Delete", class: "btn btn-danger", data: { confirm: t('.submit_delete') }) do %>
                <%= ui_icon("trash") %> <%= t '.submit_delete_value' %>
            <% end %>
          <% end %>
        <% end %>
        </div>
      </div>
    <% end %>
