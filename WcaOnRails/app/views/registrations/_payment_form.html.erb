<% add_to_packs("auto_numeric") %>
<%= horizontal_simple_form_for :payment, url: "", html: { id: :form_payment } do |f| %>
  <%= render 'entry_fee', label: t('registrations.payment_form.labels.fees_paid'), money_amount: @registration.paid_entry_fees %>
  <%= render 'entry_fee', label: t('registrations.payment_form.labels.fees_remaining'), money_amount: @registration.outstanding_entry_fees %>
  <% if @competition.enable_donations %>
    <%= f.input :show_donation, as: :boolean, label: t('registrations.payment_form.labels.show_donation'), hint: "" %>
    <%= f.input :donation, as: :money_amount, currency: @registration.outstanding_entry_fees.currency.iso_code, value: "0", label: t('registrations.payment_form.labels.donation'), hint: t('registrations.payment_form.hints.donation') %>
  <% end %>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10 text-danger" id="intent-ajax-error">
    </div>
  </div>
  <%= f.button :button, t('registrations.payment_button_text'), id: :"stripe-button", class: 'btn btn-primary' %>
  <div id="stripe-elements" style="display: none;">
    <div class="form-group" id="group-payment-element">
      <label class="col-sm-2 control-label" for="payment-element"><%= t("registrations.payment_form.labels.payment_information") %></label>
      <div class="col-sm-9">
        <div id="payment-element"></div>
        <p class="help-block"><%= t("registrations.payment_form.hints.payment_information") %></p>
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10 text-danger" id="payment-error">
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10">
        <%= f.button :button, t('registrations.payment_confirmation_text'), id: :"payment-button", class: 'btn btn-primary' %>
      </div>
    </div>
  </div>
  <script src="https://js.stripe.com/v3/"></script>
  <script>
    // From https://stripe.com/docs/js/appendix/supported_locales
    var supported_locales = ['ar', 'bg', 'cs', 'da', 'de', 'el', 'en', 'en-GB', 'es', 'es-419', 'et', 'fi', 'fil', 'fr', 'fr-CA', 'he', 'hr', 'hu', 'id', 'it', 'ja', 'ko', 'lt', 'lv', 'ms', 'mt', 'nb', 'nl', 'pl', 'pt-BR', 'pt', 'ro', 'ru', 'sk', 'sl', 'sv', 'th', 'tr', 'vi', 'zh', 'zh-HK', 'zh-TW'];
    var wca_locale = '<%= I18n.locale %>';
    var stripe = Stripe('<%= EnvVars.STRIPE_PUBLISHABLE_KEY %>', {
      locale: supported_locales.includes(wca_locale) ? wca_locale : 'auto',
      stripeAccount: '<%= @competition.connected_stripe_account_id %>',
    });
    var $stripeCheckoutButton = $('#stripe-button');
    var $stripeElementsDiv = $('#stripe-elements');

    var $paymentButton = $('#payment-button');

    var $intentAjaxError = $('#intent-ajax-error');

    var elements;

    function toggleSaving(saving, button = $paymentButton) {
      button.attr("disabled", saving);
      button.toggleClass("saving", saving);
    }

    // We need to ask the user to explicitly start the checkout process, because they may or may not enter
    // a donation amount that needs to be included in the "amount" computation we send over to Stripe.
    // TODO if anybody has smarter ideas how to handle the donation amount, feel free to change this!
    $stripeCheckoutButton.on('click', function(e) {
      e.preventDefault();

      toggleSaving(true, $stripeCheckoutButton);
      $intentAjaxError.hide();

      loadPaymentIntent();
    });

    // Fetches a payment intent and captures the client secret
    function loadPaymentIntent() {
      var registration_fees_to_pay = <%= @registration.outstanding_entry_fees.cents %>;
      var donation = parseInt($('#payment_donation').val() || 0);

      var amount = registration_fees_to_pay+donation;

      if (isNaN(amount)) {
        alert('<%= t("registrations.payment_form.alerts.not_a_number") %>');
      } else if (amount < registration_fees_to_pay) {
        alert('<%= t("registrations.payment_form.alerts.amount_too_low") %>');
      } else {
        window.wca.cancelPendingAjaxAndAjax('load-payment-intent', {
          url: '<%= registration_payment_intent_path(@registration) %>',
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          data: JSON.stringify({ amount: amount }),
          success: initializeStripeElements,
          error: handlePaymentIntentError,
        });
      }
    }

    async function initializeStripeElements(data) {
      $stripeCheckoutButton.hide();
      $stripeElementsDiv.show();

      const { clientSecret } = data;
      const appearance = { theme: 'flat' };

      elements = stripe.elements({ appearance, clientSecret });

      const paymentElement = elements.create("payment");
      paymentElement.mount("#payment-element");

      $paymentButton.on('click', handleSubmit);
      toggleSaving(false);
    }

    async function handlePaymentIntentError(errorData) {
      toggleSaving(false, $stripeCheckoutButton);
      $intentAjaxError.show();

      var requestId = errorData.getResponseHeader('X-Request-Id');

      $intentAjaxError.text(`${errorData.statusText}: ${requestId}`);
    }

    async function handleSubmit(e) {
      e.preventDefault();
      toggleSaving(true);

      const { error } = await stripe.confirmPayment({
        elements,
        confirmParams: {
          return_url: '<%= registration_payment_success_url(@registration, host: EnvVars.ROOT_URL) %>',
        }
      });

      var $paymentElement = $('#group-payment-element')
      $paymentElement.removeClass("has-error");

      if (error) {
        var $paymentError = $('#payment-error');

        if (error.type === 'card_error' || error.type === 'validation_error') {
          $paymentElement.addClass("has-error");
          $paymentError.text(error.message);
        } else {
          $paymentElement.addClass("has-error");
          $paymentError.text('<%= t("registrations.payment_form.errors.stripe_failed") %>');
        }
      }

      toggleSaving(false);
    }

    var donationField = $('.payment_donation');
    donationField.hide();

    $('input[name="payment[show_donation]"]').on('change', function() {
      if (this.checked) {
        donationField.show(250);
      } else {
        donationField.hide(250);
      }
    });
  </script>
<% end %>
