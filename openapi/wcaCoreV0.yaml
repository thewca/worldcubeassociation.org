openapi: 3.1.0
info:
  title: WCA API Documentation
  summary: Documentation of the WCA API, currently in progress
  description: The WCA API allows developers to access data from the WCA using oidc
  contact:
    name: WCA Software Team
    url: https://www.worldcubeassociation.org
    email: software@worldcubeassociation.org
  version: 0.0.1
servers:
  - url: http://localhost:3000/api/v0
    description: The production API server
paths:
  /competitions/{competitionId}/:
    $ref: 'paths/competitions/competitionById.yaml'
  /competitions/{competitionId}/events:
    $ref: 'paths/competitions/competitionEvents.yaml'
  /competitions/{competitionId}/schedule:
    $ref: 'paths/competitions/competitionSchedule.yaml'
  /competitions/{competitionId}/registrations:
    $ref: 'paths/competitions/competitionRegistrations.yaml'
  /competitions/{competitionId}/podiums:
    $ref: 'paths/competitions/competitionPodiums.yaml'
  /competition_index:
    $ref: 'paths/competitions/competitionList.yaml'
  /incidents:
    get:
      summary: Get a list of incidents
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: tags
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: number
        - name: per_page
          in: query
          schema:
            type: number
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
  /persons/{wca_id}/:
    get:
      summary: Get information for a person
      parameters:
        - name: wca_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonInfo'
  /persons/{wca_id}/results:
    get:
      summary: Get results for a person
      parameters:
        - name: wca_id
          in: path
          required: true
          schema:
            type: string
        - name: event_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'
  /user_groups:
    get:
      summary: Get user groups
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is active
        - name: isHidden
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is hidden
        - name: groupType
          in: query
          schema:
            type: string
          description: Filter by group type (e.g., "officers")
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by a specific field (e.g., "start_date", "-created_at")
      responses:
        '200':
          description: A list of user groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'

  /user_roles:
    get:
      summary: Get user roles
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is active
        - name: isGroupHidden
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is hidden
        - name: userId
          in: query
          schema:
            type: integer
          description: Filter by user ID
        - name: groupId
          in: query
          schema:
            type: integer
          description: Filter by group ID
        - name: status
          in: query
          schema:
            type: string
          description: Filter by metadata status (e.g., "chair")
        - name: groupType
          in: query
          schema:
            type: string
          description: Filter by group type (e.g., "officers")
        - name: parentGroupId
          in: query
          schema:
            type: number
          description: Filter by parent Group
        - name: isLead
          in: query
          schema:
            type: boolean
          description: Filter by whether the user is the lead of the group
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by a specific field (e.g., "start_date", "-created_at")
        - name: perPage
          in: query
          schema:
            type: integer
            default: 100
          description: Number of results per page
      responses:
        '200':
          description: A list of user roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'

  /regulations/translations:
    get:
      summary: Gets all translations of regulations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulationsTranslations'
  /export/public:
    get:
      summary: Get Export Information
      operationId: getExports
      responses:
        "200":
          description: Successfully retrieved exports
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportInfo"
  /users/me/permissions:
    get:
      summary: Get user's permissions
      operationId: getUserPermissions
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully retrieved permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermissions"
        "401":
          description: Unauthorized
  /known-timezones:
    get:
      summary: Get a list of Olson timezones that the backend understands
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: 'America/New_York'

  /regional-organizations:
    get:
      summary: A list of currently acknowledged regional organizations
      operationId: getOrganizations
      responses:
        "200":
          description: Retrieved organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegionalOrganization"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRole:
      type: object
      required:
        - id
        - start_date
        - end_date
        - group
        - user
        - metadata
      properties:
        id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        group:
          $ref: '#/components/schemas/UserGroup'
        user:
          $ref: '#/components/schemas/Person'
        metadata:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            email:
              type: string
              format: email
        class:
          type: string

    UserGroup:
      type: object
      required:
        - id
        - name
        - group_type
        - is_active
        - is_hidden
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        group_type:
          type: string
        parent_group_id:
          type: integer
          nullable: true
        is_active:
          type: boolean
        is_hidden:
          type: boolean
        metadata_id:
          type: integer
          nullable: true
        metadata_type:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        lead_user:
          $ref: '#/components/schemas/Person'
        metadata:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            email:
              type: string
              format: email
            preferred_contact_mode:
              type: string
            friendly_id:
              type: string

    RegionalOrganization:
      type: object
      required:
        - name
        - country_iso2
        - website
      properties:
        name:
          type: string
        country_iso2:
          type: string
        website:
          type: string
        logo_url:
          type: string
          format: uri

    Person:
      type: object
      required:
        - id
        - name
        - wca_id
        - country_iso2
        - delegate_status
        - teams
        - url
        - avatar
      properties:
        id:
          type: integer
          example: 267
        name:
          type: string
          example: "Tim Reynolds"
        gender:
          type: string
          example: "m"
        wca_id:
          type: string
          example: "2005REYN01"
        country_iso2:
          type: string
          example: "US"
        delegate_status:
          type: string
          example: "delegate"
        teams:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembership'
        url:
          type: string
          format: uri
          example: "https://www.worldcubeassociation.org/persons/2005REYN01"
        avatar:
          $ref: '#/components/schemas/UserAvatar'

    Incident:
      type: object
      required:
        - id
        - title
        - public_summary
        - created_at
        - updated_at
        - resolved_at
        - digest_worthy
        - url
        - tags
        - competitions
      properties:
        id:
          type: string
        title:
          type: string
        private_description:
          type: string
        public_summary:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        resolved_at:
          type: string
          format: date-time
        digest_worthy:
          type: boolean
        digest_sent_at:
          type: string
          format: date-time
        url:
          type: string
          format: uri
        tags:
          type: array
          items:
            type: object
            required:
              - name
              - content_html
              - url
            properties:
              name:
                type: string
              id:
                type: number
              url:
                type: string
                format: uri
              content_html:
                type: string
        competitions:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
              comments:
                type: string

    TeamMembership:
      $ref: 'schemas/users/TeamMembership.yaml'

    RegulationsTranslations:
      type: object
      required:
        - current
        - outdated
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        outdated:
          type: array
          items:
            $ref: '#/components/schemas/Translation'

    Translation:
      type: object
      required:
        - version
        - language
        - language_english
        - url
      properties:
        version:
          type: string
        language:
          type: string
        language_english:
          type: string
        url:
          type: string

    UserAvatar:
      $ref: './schemas/users/UserAvatar.yaml'

    ExportInfo:
      type: object
      required:
        - export_date
        - sql_url
        - sql_filesize_bytes
        - tsv_url
        - tsv_filesize_bytes
        - readme
      properties:
        export_date:
          type: string
          format: date
        sql_url:
          type: string
          format: uri
        sql_filesize_bytes:
          type: number
        tsv_url:
          type: string
          format: uri
        tsv_filesize_bytes:
          type: number
        readme:
          type: string
        developer_url:
          type: string
          format: uri

    Rank:
      type: object
      required:
        - id
        - person_id
        - event_id
        - best
        - world_rank
        - continent_rank
        - country_rank
      properties:
        id:
          type: integer
        person_id:
          type: string
        event_id:
          type: string
        best:
          type: integer
        world_rank:
          type: integer
        continent_rank:
          type: integer
        country_rank:
          type: integer

    Medals:
      type: object
      required:
        - gold
        - silver
        - bronze
        - total
      properties:
        gold:
          type: integer
        silver:
          type: integer
        bronze:
          type: integer
        total:
          type: integer

    Records:
      type: object
      required:
        - national
        - continental
        - world
        - total
      properties:
        national:
          type: integer
        continental:
          type: integer
        world:
          type: integer
        total:
          type: integer

    PersonInfo:
      type: object
      required:
        - person
        - medals
        - records
        - personal_records
        - championship_podiums
        - competition_count
      properties:
        person:
          $ref: '#/components/schemas/Person'
        previous_persons:
          type: array
          items:
            type: object
        ranks_single:
          type: array
          items:
            $ref: '#/components/schemas/Rank'
        ranks_average:
          type: array
          items:
            $ref: '#/components/schemas/Rank'
        medals:
          $ref: '#/components/schemas/Medals'
        records:
          $ref: '#/components/schemas/Records'
        personal_records:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SingleAndAverageRank'
        championship_podiums:
          type: object
          properties:
            world:
              type: array
              items:
                type: object
            continental:
              type: array
              items:
                type: object
            greater_china:
              type: array
              items:
                type: object
            national:
              type: array
              items:
                type: object
        competition_count:
          type: integer

    SingleAndAverageRank:
      type: object
      required:
        - average
        - single
      properties:
        average:
          $ref: "#/components/schemas/Rank"
        single:
          $ref: "#/components/schemas/Rank"


    CompetitionInfo:
      $ref: 'schemas/competitions/CompetitionInfo.yaml'

    CompetitionPermissions:
      oneOf:
        - type: array
          items:
            type: string
        - type: string
          format: "Wildcard"
          enum: "*"

    UserPermissions:
      type: object
      required:
        - can_access_panels
        - can_administer_competitions
        - can_attend_competitions
        - can_create_groups
        - can_edit_delegate_report
        - can_edit_groups
        - can_organize_competitions
        - can_read_groups_current
        - can_read_groups_past
        - can_request_to_edit_others_profile
        - can_view_delegate_admin_page
        - can_view_delegate_report
      properties:
        can_attend_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
            until:
              type: string
              format: date-time
              nullable: true
        can_organize_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_administer_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_view_delegate_admin_page:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_view_delegate_report:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_edit_delegate_report:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_create_groups:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_read_groups_current:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_read_groups_past:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_edit_groups:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_access_panels:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_request_to_edit_others_profile:
          type: object
          required:
            - scope
          properties:
            scope:
              oneOf:
                - type: array
                  items:
                    type: string
                - type: string
                  format: "Wildcard"
                  enum: "*"

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email

    Results:
      type: array
      items:
        $ref: "#/components/schemas/Result"

    Result:
      type: object
      required:
        - id
        - pos
        - best
        - average
        - name
        - country_iso2
        - competition_id
        - event_id
        - round_type_id
        - format_id
        - wca_id
        - attempts
        - best_index
        - worst_index
        - regional_single_record
        - regional_average_record
      properties:
        id:
          type: integer
        pos:
          type: integer
        best:
          type: integer
        average:
          type: integer
        name:
          type: string
        country_iso2:
          type: string
        competition_id:
          type: string
        event_id:
          type: string
        round_type_id:
          type: string
        format_id:
          type: string
        wca_id:
          type: string
        attempts:
          type: array
          items:
            type: integer
        best_index:
          type: integer
        worst_index:
          type: integer
        regional_single_record:
          type: string
          nullable: true
        regional_average_record:
          type: string
          nullable: true

    PersonalRecord:
      type: object
      properties:
        eventId:
          type: string
        bestTime:
          type: integer
          description: Best performance in milliseconds
        averageTime:
          type: integer
          description: Average performance in milliseconds

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    WcifEvent:
      $ref: './schemas/wcif/WcifEvent.yaml'

    WcifRound:
      $ref: './schemas/wcif/WcifRound.yaml'

    WcifQualification:
      $ref: './schemas/wcif/WcifQualification.yaml'

    WcifQualificationAttemptResult:
      $ref: './schemas/wcif/WcifQualificationAttemptResult.yaml'

    WcifQualificationRanking:
      $ref: './schemas/wcif/WcifQualificationRanking.yaml'

    WcifQualificationAnyResult:
      $ref: './schemas/wcif/WcifQualificationAnyResult.yaml'

    WcifTimeLimit:
      $ref: './schemas/wcif/WcifTimeLimit.yaml'

    WcifCutoff:
      $ref: './schemas/wcif/WcifCutoff.yaml'

    WcifAdvancementCondition:
      $ref: './schemas/wcif/WcifAdvancementCondition.yaml'

    WcifAdvancementConditionRanking:
      $ref: './schemas/wcif/WcifAdvancementConditionRanking.yaml'

    WcifAdvancementConditionPercent:
      $ref: './schemas/wcif/WcifAdvancementConditionPercent.yaml'

    WcifAdvancementConditionAttemptResult:
      $ref: './schemas/wcif/WcifAdvancementConditionAttemptResult.yaml'

    WcifResult:
      $ref: './schemas/wcif/WcifResult.yaml'

    WcifScrambleSet:
      $ref: './schemas/wcif/WcifScrambleSet.yaml'

    WcifAttempt:
      $ref: './schemas/wcif/WcifAttempt.yaml'

    WcifSchedule:
      $ref: './schemas/wcif/WcifSchedule.yaml'

    WcifVenue:
      $ref: './schemas/wcif/WcifVenue.yaml'

    WcifRoom:
      $ref: './schemas/wcif/WcifRoom.yaml'

    WcifActivity:
      $ref: './schemas/wcif/WcifActivity.yaml'

    WcifCountryCode:
      type: string
      example: "US"

    WcifActivityCode:
      type: string
      example: "333-r1-g1"
