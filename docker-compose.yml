version: "3.8"

x-app: &app
  build:
    context: WcaOnRails
  working_dir: /app/WcaOnRails
  volumes:
    - .:/app
    - gems_volume:/usr/local/bundle
    - yarn_volume:/app/node_modules
  networks:
    - wca-main

services:
  wca_on_rails:
    <<: *app
    container_name: "rails"
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: development
      DATABASE_HOST: wca_db
      SHAKAPACKER_DEV_SERVER_HOST: wca_webpacker
      REDIS_URL: redis://wca_redis:6379/0
    tty: true
    # First, install Ruby and Node dependencies
    # Next, load the database if it does not exist yet
    # Start the server and bind to 0.0.0.0 (vs 127.0.0.1) so Docker's port mappings work correctly
    command: >
      bash -c 'bundle install && yarn install &&
      rm -f .db-inited &&
      if ! [[ "`mysqlshow --user=root --host=wca_db wca_development`" =~ "Tables" ]] ;
        then echo "Populating development db, this will take a while" && bin/rake db:reset ;
      fi &&
      touch .db-inited &&
      bin/rails server -b 0.0.0.0'
    healthcheck:
      test: ["CMD", "test", "-f", ".db-inited"]
      interval: 5s
      timeout: 2s
      retries: 20
      # Give the container some time to populate the database
      start_period: 15m
    depends_on:
      wca_db:
        condition: 'service_healthy'
      wca_redis:
        condition: 'service_started'

  wca_webpacker:
    <<: *app
    container_name: "webpacker"
    ports:
      - "3035:3035"
    environment:
      DATABASE_HOST: wca_db
      SHAKAPACKER_DEV_SERVER_HOST: 0.0.0.0
    command: >
      bash -c 'bundle install && yarn install &&
      bin/shakapacker-dev-server'
    depends_on:
      wca_db:
        condition: 'service_healthy'
      wca_on_rails:
        # We need to make sure that the database is populated because our frontend code
        # pulls stuff like WCA Events and Round formats from the DB when compiling assets
        condition: 'service_healthy'

  wca_db:
    image: mysql:8.0
    container_name: "database"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    command: --authentication-policy=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - wca_db_volume:/var/lib/mysql
      - ./docker/my.cnf:/etc/my.cnf
    # Suppress unneeded messages via https://stackoverflow.com/a/55706057/2558618
    cap_add:
      - SYS_NICE
    networks:
      - wca-main
    healthcheck:
      test: [ "CMD", "mysql", "-u", "root", "-e", "SELECT 1;" ]
      interval: 5s
      timeout: 5s
      retries: 20

  wca_redis:
    image: redis:7.0-alpine
    container_name: "redis-main"
    expose:
      - "6379"
    command: redis-server --loglevel warning
    volumes:
      - cache_volume:/data
    networks:
      - wca-main

volumes:
  wca_db_volume:
    driver: local
  gems_volume:
    driver: local
  yarn_volume:
    driver: local
  cache_volume:
    driver: local

networks:
  wca-main:
    name: wca-main
