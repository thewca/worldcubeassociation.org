/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColorPaletteSelect".
 */
export type ColorPaletteSelect = 'blue' | 'red' | 'green' | 'orange' | 'yellow' | 'grey';
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColorSelect".
 */
export type ColorSelect =
  | 'darkBlue'
  | 'darkRed'
  | 'darkGreen'
  | 'darkOrange'
  | 'darkYellow'
  | 'blue'
  | 'red'
  | 'green'
  | 'orange'
  | 'yellow'
  | 'white'
  | 'black';
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    testimonials: Testimonial;
    announcements: Announcement;
    faqCategories: FaqCategory;
    faqQuestions: FaqQuestion;
    users: User;
    regulationsHistoryItem: RegulationsHistoryItem;
    tools: Tool;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    faqCategories: {
      relatedQuestions: 'faqQuestions';
    };
  };
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    announcements: AnnouncementsSelect<false> | AnnouncementsSelect<true>;
    faqCategories: FaqCategoriesSelect<false> | FaqCategoriesSelect<true>;
    faqQuestions: FaqQuestionsSelect<false> | FaqQuestionsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    regulationsHistoryItem: RegulationsHistoryItemSelect<false> | RegulationsHistoryItemSelect<true>;
    tools: ToolsSelect<false> | ToolsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    nav: Nav;
    home: Home;
    'about-us-page': AboutUsPage;
    'privacy-page': PrivacyPage;
    'disclaimer-page': DisclaimerPage;
    'speedcubing-history-page': SpeedcubingHistoryPage;
    'about-regulations-page': AboutRegulationsPage;
  };
  globalsSelect: {
    nav: NavSelect<false> | NavSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    'about-us-page': AboutUsPageSelect<false> | AboutUsPageSelect<true>;
    'privacy-page': PrivacyPageSelect<false> | PrivacyPageSelect<true>;
    'disclaimer-page': DisclaimerPageSelect<false> | DisclaimerPageSelect<true>;
    'speedcubing-history-page': SpeedcubingHistoryPageSelect<false> | SpeedcubingHistoryPageSelect<true>;
    'about-regulations-page': AboutRegulationsPageSelect<false> | AboutRegulationsPageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  image?: (number | null) | Media;
  punchline: string;
  fullTestimonial: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  fullTestimonialMarkdown: string;
  whoDunnit: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements".
 */
export interface Announcement {
  id: number;
  image?: (number | null) | Media;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  contentMarkdown: string;
  publishedAt: string;
  publishedBy: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  email: string;
  emailVerified?: string | null;
  name?: string | null;
  image?: string | null;
  roles?: string[];
  accounts?:
    | {
        id?: string | null;
        provider: string;
        providerAccountId: string;
        type: string;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqCategories".
 */
export interface FaqCategory {
  id: number;
  title: string;
  colorPalette: ColorPaletteSelect;
  relatedQuestions?: {
    docs?: (number | FaqQuestion)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqQuestions".
 */
export interface FaqQuestion {
  id: number;
  category: number | FaqCategory;
  question: string;
  answer: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "regulationsHistoryItem".
 */
export interface RegulationsHistoryItem {
  id: number;
  version: string;
  url: string;
  changesUrl?: string | null;
  summarizedChangesUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools".
 */
export interface Tool {
  id: number;
  name: string;
  description: string;
  homepageLink: string;
  guideLink?: string | null;
  sourceCodeLink?: string | null;
  isOfficial?: boolean | null;
  author: string;
  category: 'before' | 'during' | 'after';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'announcements';
        value: number | Announcement;
      } | null)
    | ({
        relationTo: 'faqCategories';
        value: number | FaqCategory;
      } | null)
    | ({
        relationTo: 'faqQuestions';
        value: number | FaqQuestion;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'regulationsHistoryItem';
        value: number | RegulationsHistoryItem;
      } | null)
    | ({
        relationTo: 'tools';
        value: number | Tool;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  image?: T;
  punchline?: T;
  fullTestimonial?: T;
  fullTestimonialMarkdown?: T;
  whoDunnit?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "announcements_select".
 */
export interface AnnouncementsSelect<T extends boolean = true> {
  image?: T;
  title?: T;
  content?: T;
  contentMarkdown?: T;
  publishedAt?: T;
  publishedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqCategories_select".
 */
export interface FaqCategoriesSelect<T extends boolean = true> {
  title?: T;
  colorPalette?: T;
  relatedQuestions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqQuestions_select".
 */
export interface FaqQuestionsSelect<T extends boolean = true> {
  category?: T;
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  id?: T;
  email?: T;
  emailVerified?: T;
  name?: T;
  image?: T;
  roles?: T;
  accounts?:
    | T
    | {
        id?: T;
        provider?: T;
        providerAccountId?: T;
        type?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "regulationsHistoryItem_select".
 */
export interface RegulationsHistoryItemSelect<T extends boolean = true> {
  version?: T;
  url?: T;
  changesUrl?: T;
  summarizedChangesUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools_select".
 */
export interface ToolsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  homepageLink?: T;
  guideLink?: T;
  sourceCodeLink?: T;
  isOfficial?: T;
  author?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav".
 */
export interface Nav {
  id: number;
  entry: (
    | {
        title: string;
        displayIcon?:
          | (
              | 'About the Regulations'
              | 'About the WCA'
              | 'Admin Results'
              | 'All Competitions'
              | 'Bookmark'
              | 'Clone'
              | 'Competition Not Started'
              | 'Registration Closed'
              | 'Registration Closed (Red)'
              | 'Registration Full but Open'
              | 'Registration Full but Open (Orange)'
              | 'Registration Not Full, Open'
              | 'Registration Not Full, Open (Green)'
              | 'Registration Not Open Yet'
              | 'Registration Not Open Yet (Grey)'
              | 'Registration Open Date'
              | 'Registration Close Date'
              | 'Competitors'
              | 'Contact'
              | 'Delegate Report'
              | 'Details'
              | 'Developer Export'
              | 'Disciplinary Log'
              | 'Disclaimer'
              | 'Download'
              | 'Edit'
              | 'Educational Resources'
              | 'Error'
              | 'External Link'
              | 'Facebook'
              | 'Filters'
              | 'GitHub'
              | 'Guidelines'
              | 'Help and FAQs'
              | 'Incidents Log'
              | 'Information'
              | 'Instagram'
              | 'Language'
              | 'List'
              | 'Location'
              | 'Manage Tabs'
              | 'Map'
              | 'Media Submission'
              | 'Menu'
              | 'Multimedia'
              | 'My Competitions'
              | 'My Results'
              | 'National Championship'
              | 'New Competition'
              | 'On-the-Spot Registration'
              | 'Payment'
              | 'Privacy'
              | 'Rankings'
              | 'Records'
              | 'Regional Organisations'
              | 'Register'
              | 'Registration'
              | 'Regulations and Guidelines'
              | 'Regulations History'
              | 'Regulations'
              | 'Results Export'
              | 'Scrambles'
              | 'Search'
              | 'Spectators'
              | 'Speedcubing History'
              | 'Spots Left'
              | 'Statistics'
              | 'Teams, Committees and Councils'
              | 'Tools'
              | 'Translators'
              | 'Twitch'
              | 'User'
              | 'Users / Persons'
              | 'Venue'
              | 'WCA Delegates'
              | 'WCA Documents'
              | 'WCA Live'
              | 'WCA Officers and Board'
              | 'Weibo'
              | 'X (formerly Twitter)'
              | 'YouTube'
            )
          | null;
        entries: (
          | {
              displayText: string;
              targetLink: string;
              displayIcon?:
                | (
                    | 'About the Regulations'
                    | 'About the WCA'
                    | 'Admin Results'
                    | 'All Competitions'
                    | 'Bookmark'
                    | 'Clone'
                    | 'Competition Not Started'
                    | 'Registration Closed'
                    | 'Registration Closed (Red)'
                    | 'Registration Full but Open'
                    | 'Registration Full but Open (Orange)'
                    | 'Registration Not Full, Open'
                    | 'Registration Not Full, Open (Green)'
                    | 'Registration Not Open Yet'
                    | 'Registration Not Open Yet (Grey)'
                    | 'Registration Open Date'
                    | 'Registration Close Date'
                    | 'Competitors'
                    | 'Contact'
                    | 'Delegate Report'
                    | 'Details'
                    | 'Developer Export'
                    | 'Disciplinary Log'
                    | 'Disclaimer'
                    | 'Download'
                    | 'Edit'
                    | 'Educational Resources'
                    | 'Error'
                    | 'External Link'
                    | 'Facebook'
                    | 'Filters'
                    | 'GitHub'
                    | 'Guidelines'
                    | 'Help and FAQs'
                    | 'Incidents Log'
                    | 'Information'
                    | 'Instagram'
                    | 'Language'
                    | 'List'
                    | 'Location'
                    | 'Manage Tabs'
                    | 'Map'
                    | 'Media Submission'
                    | 'Menu'
                    | 'Multimedia'
                    | 'My Competitions'
                    | 'My Results'
                    | 'National Championship'
                    | 'New Competition'
                    | 'On-the-Spot Registration'
                    | 'Payment'
                    | 'Privacy'
                    | 'Rankings'
                    | 'Records'
                    | 'Regional Organisations'
                    | 'Register'
                    | 'Registration'
                    | 'Regulations and Guidelines'
                    | 'Regulations History'
                    | 'Regulations'
                    | 'Results Export'
                    | 'Scrambles'
                    | 'Search'
                    | 'Spectators'
                    | 'Speedcubing History'
                    | 'Spots Left'
                    | 'Statistics'
                    | 'Teams, Committees and Councils'
                    | 'Tools'
                    | 'Translators'
                    | 'Twitch'
                    | 'User'
                    | 'Users / Persons'
                    | 'Venue'
                    | 'WCA Delegates'
                    | 'WCA Documents'
                    | 'WCA Live'
                    | 'WCA Officers and Board'
                    | 'Weibo'
                    | 'X (formerly Twitter)'
                    | 'YouTube'
                  )
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'LinkItem';
            }
          | {
              title: string;
              displayIcon?:
                | (
                    | 'About the Regulations'
                    | 'About the WCA'
                    | 'Admin Results'
                    | 'All Competitions'
                    | 'Bookmark'
                    | 'Clone'
                    | 'Competition Not Started'
                    | 'Registration Closed'
                    | 'Registration Closed (Red)'
                    | 'Registration Full but Open'
                    | 'Registration Full but Open (Orange)'
                    | 'Registration Not Full, Open'
                    | 'Registration Not Full, Open (Green)'
                    | 'Registration Not Open Yet'
                    | 'Registration Not Open Yet (Grey)'
                    | 'Registration Open Date'
                    | 'Registration Close Date'
                    | 'Competitors'
                    | 'Contact'
                    | 'Delegate Report'
                    | 'Details'
                    | 'Developer Export'
                    | 'Disciplinary Log'
                    | 'Disclaimer'
                    | 'Download'
                    | 'Edit'
                    | 'Educational Resources'
                    | 'Error'
                    | 'External Link'
                    | 'Facebook'
                    | 'Filters'
                    | 'GitHub'
                    | 'Guidelines'
                    | 'Help and FAQs'
                    | 'Incidents Log'
                    | 'Information'
                    | 'Instagram'
                    | 'Language'
                    | 'List'
                    | 'Location'
                    | 'Manage Tabs'
                    | 'Map'
                    | 'Media Submission'
                    | 'Menu'
                    | 'Multimedia'
                    | 'My Competitions'
                    | 'My Results'
                    | 'National Championship'
                    | 'New Competition'
                    | 'On-the-Spot Registration'
                    | 'Payment'
                    | 'Privacy'
                    | 'Rankings'
                    | 'Records'
                    | 'Regional Organisations'
                    | 'Register'
                    | 'Registration'
                    | 'Regulations and Guidelines'
                    | 'Regulations History'
                    | 'Regulations'
                    | 'Results Export'
                    | 'Scrambles'
                    | 'Search'
                    | 'Spectators'
                    | 'Speedcubing History'
                    | 'Spots Left'
                    | 'Statistics'
                    | 'Teams, Committees and Councils'
                    | 'Tools'
                    | 'Translators'
                    | 'Twitch'
                    | 'User'
                    | 'Users / Persons'
                    | 'Venue'
                    | 'WCA Delegates'
                    | 'WCA Documents'
                    | 'WCA Live'
                    | 'WCA Officers and Board'
                    | 'Weibo'
                    | 'X (formerly Twitter)'
                    | 'YouTube'
                  )
                | null;
              entries: {
                displayText: string;
                targetLink: string;
                displayIcon?:
                  | (
                      | 'About the Regulations'
                      | 'About the WCA'
                      | 'Admin Results'
                      | 'All Competitions'
                      | 'Bookmark'
                      | 'Clone'
                      | 'Competition Not Started'
                      | 'Registration Closed'
                      | 'Registration Closed (Red)'
                      | 'Registration Full but Open'
                      | 'Registration Full but Open (Orange)'
                      | 'Registration Not Full, Open'
                      | 'Registration Not Full, Open (Green)'
                      | 'Registration Not Open Yet'
                      | 'Registration Not Open Yet (Grey)'
                      | 'Registration Open Date'
                      | 'Registration Close Date'
                      | 'Competitors'
                      | 'Contact'
                      | 'Delegate Report'
                      | 'Details'
                      | 'Developer Export'
                      | 'Disciplinary Log'
                      | 'Disclaimer'
                      | 'Download'
                      | 'Edit'
                      | 'Educational Resources'
                      | 'Error'
                      | 'External Link'
                      | 'Facebook'
                      | 'Filters'
                      | 'GitHub'
                      | 'Guidelines'
                      | 'Help and FAQs'
                      | 'Incidents Log'
                      | 'Information'
                      | 'Instagram'
                      | 'Language'
                      | 'List'
                      | 'Location'
                      | 'Manage Tabs'
                      | 'Map'
                      | 'Media Submission'
                      | 'Menu'
                      | 'Multimedia'
                      | 'My Competitions'
                      | 'My Results'
                      | 'National Championship'
                      | 'New Competition'
                      | 'On-the-Spot Registration'
                      | 'Payment'
                      | 'Privacy'
                      | 'Rankings'
                      | 'Records'
                      | 'Regional Organisations'
                      | 'Register'
                      | 'Registration'
                      | 'Regulations and Guidelines'
                      | 'Regulations History'
                      | 'Regulations'
                      | 'Results Export'
                      | 'Scrambles'
                      | 'Search'
                      | 'Spectators'
                      | 'Speedcubing History'
                      | 'Spots Left'
                      | 'Statistics'
                      | 'Teams, Committees and Councils'
                      | 'Tools'
                      | 'Translators'
                      | 'Twitch'
                      | 'User'
                      | 'Users / Persons'
                      | 'Venue'
                      | 'WCA Delegates'
                      | 'WCA Documents'
                      | 'WCA Live'
                      | 'WCA Officers and Board'
                      | 'Weibo'
                      | 'X (formerly Twitter)'
                      | 'YouTube'
                    )
                  | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'LinkItem';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'NestedDropdown';
            }
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'VisualDivider';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'NavDropdown';
      }
    | {
        displayText: string;
        targetLink: string;
        displayIcon?:
          | (
              | 'About the Regulations'
              | 'About the WCA'
              | 'Admin Results'
              | 'All Competitions'
              | 'Bookmark'
              | 'Clone'
              | 'Competition Not Started'
              | 'Registration Closed'
              | 'Registration Closed (Red)'
              | 'Registration Full but Open'
              | 'Registration Full but Open (Orange)'
              | 'Registration Not Full, Open'
              | 'Registration Not Full, Open (Green)'
              | 'Registration Not Open Yet'
              | 'Registration Not Open Yet (Grey)'
              | 'Registration Open Date'
              | 'Registration Close Date'
              | 'Competitors'
              | 'Contact'
              | 'Delegate Report'
              | 'Details'
              | 'Developer Export'
              | 'Disciplinary Log'
              | 'Disclaimer'
              | 'Download'
              | 'Edit'
              | 'Educational Resources'
              | 'Error'
              | 'External Link'
              | 'Facebook'
              | 'Filters'
              | 'GitHub'
              | 'Guidelines'
              | 'Help and FAQs'
              | 'Incidents Log'
              | 'Information'
              | 'Instagram'
              | 'Language'
              | 'List'
              | 'Location'
              | 'Manage Tabs'
              | 'Map'
              | 'Media Submission'
              | 'Menu'
              | 'Multimedia'
              | 'My Competitions'
              | 'My Results'
              | 'National Championship'
              | 'New Competition'
              | 'On-the-Spot Registration'
              | 'Payment'
              | 'Privacy'
              | 'Rankings'
              | 'Records'
              | 'Regional Organisations'
              | 'Register'
              | 'Registration'
              | 'Regulations and Guidelines'
              | 'Regulations History'
              | 'Regulations'
              | 'Results Export'
              | 'Scrambles'
              | 'Search'
              | 'Spectators'
              | 'Speedcubing History'
              | 'Spots Left'
              | 'Statistics'
              | 'Teams, Committees and Councils'
              | 'Tools'
              | 'Translators'
              | 'Twitch'
              | 'User'
              | 'Users / Persons'
              | 'Venue'
              | 'WCA Delegates'
              | 'WCA Documents'
              | 'WCA Live'
              | 'WCA Officers and Board'
              | 'Weibo'
              | 'X (formerly Twitter)'
              | 'YouTube'
            )
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'LinkItem';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  item: (TwoBlocksBlock | FullWidthBlock)[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksBlock".
 */
export interface TwoBlocksBlock {
  type: '1/3 & 2/3' | '2/3 & 1/3' | '1/2 & 1/2' | '1/4 & 3/4' | '3/4 & 1/4';
  alignment: 'horizontal' | 'vertical';
  blocks: (
    | TextCardBlock
    | AnnouncementsSectionBlock
    | ImageBannerBlock
    | ImageOnlyCardBlock
    | TestimonialsBlock
    | FeaturedCompetitionsBlock
    | TwoBlocksBranchBlock
  )[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoBlocks';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextCardBlock".
 */
export interface TextCardBlock {
  heading: string;
  body: string;
  variant: 'info' | 'hero';
  separatorAfterHeading: boolean;
  buttonText?: string | null;
  buttonLink?: string | null;
  headerImage?: (number | null) | Media;
  colorPalette: ColorPaletteSelect;
  id?: string | null;
  blockName?: string | null;
  blockType: 'TextCard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnnouncementsSectionBlock".
 */
export interface AnnouncementsSectionBlock {
  mainAnnouncement: number | Announcement;
  furtherAnnouncements?: (number | Announcement)[] | null;
  colorPalette: ColorPaletteSelect;
  id?: string | null;
  blockName?: string | null;
  blockType: 'AnnouncementsSection';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBannerBlock".
 */
export interface ImageBannerBlock {
  heading: string;
  body: string;
  mainImage: number | Media;
  colorPalette: ColorPaletteSelect;
  bgColor: ColorSelect;
  headingColor: ColorSelect;
  textColor: ColorSelect;
  bgImage?: (number | null) | Media;
  bgSize?: number | null;
  bgPos?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ImageBanner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageOnlyCardBlock".
 */
export interface ImageOnlyCardBlock {
  mainImage: number | Media;
  heading?: string | null;
  colorPalette: ColorPaletteSelect;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ImageOnlyCard';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  blocks: TestimonialSlideBlock[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'TestimonialsSpinner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialSlideBlock".
 */
export interface TestimonialSlideBlock {
  testimonial: number | Testimonial;
  colorPalette: ColorPaletteSelect;
  id?: string | null;
  blockName?: string | null;
  blockType: 'TestimonialSlide';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedCompetitionsBlock".
 */
export interface FeaturedCompetitionsBlock {
  Competition1ID: string;
  colorPalette1: ColorPaletteSelect;
  Competition2ID: string;
  colorPalette2: ColorPaletteSelect;
  id?: string | null;
  blockName?: string | null;
  blockType: 'FeaturedCompetitions';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksBranchBlock".
 */
export interface TwoBlocksBranchBlock {
  type: '1/3 & 2/3' | '2/3 & 1/3' | '1/2 & 1/2' | '1/4 & 3/4' | '3/4 & 1/4';
  alignment: 'horizontal' | 'vertical';
  blocks: (
    | TextCardBlock
    | AnnouncementsSectionBlock
    | ImageBannerBlock
    | ImageOnlyCardBlock
    | TestimonialsBlock
    | FeaturedCompetitionsBlock
    | TwoBlocksLeafBlock
  )[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoBlocksBranch';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksLeafBlock".
 */
export interface TwoBlocksLeafBlock {
  type: '1/3 & 2/3' | '2/3 & 1/3' | '1/2 & 1/2' | '1/4 & 3/4' | '3/4 & 1/4';
  alignment: 'horizontal' | 'vertical';
  blocks: (
    | TextCardBlock
    | AnnouncementsSectionBlock
    | ImageBannerBlock
    | ImageOnlyCardBlock
    | TestimonialsBlock
    | FeaturedCompetitionsBlock
  )[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoBlocksLeaf';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FullWidthBlock".
 */
export interface FullWidthBlock {
  blocks: (
    | TextCardBlock
    | AnnouncementsSectionBlock
    | ImageBannerBlock
    | ImageOnlyCardBlock
    | TestimonialsBlock
    | FeaturedCompetitionsBlock
  )[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'fullWidth';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us-page".
 */
export interface AboutUsPage {
  id: number;
  blocks: (
    | {
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        contentMarkdown: string;
        buttons: {
          label: string;
          url: string;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'callToAction';
      }
    | {
        title: string;
        image?: (number | null) | Media;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        contentMarkdown: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'simpleItem';
      }
    | {
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        contentMarkdown: string;
        quotedPerson: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'quote';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-page".
 */
export interface PrivacyPage {
  id: number;
  preamble: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  preambleMarkdown: string;
  blocks: {
    title: string;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    contentMarkdown: string;
    id?: string | null;
    blockName?: string | null;
    blockType: 'privacyItem';
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "disclaimer-page".
 */
export interface DisclaimerPage {
  id: number;
  blocks: {
    title?: string | null;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    contentMarkdown: string;
    id?: string | null;
    blockName?: string | null;
    blockType: 'disclaimerItem';
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speedcubing-history-page".
 */
export interface SpeedcubingHistoryPage {
  id: number;
  blocks: (
    | {
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        contentMarkdown: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'paragraph';
      }
    | {
        caption: string;
        image: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'captionedImage';
      }
    | {
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        contentMarkdown: string;
        quotedPerson: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'quote';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-regulations-page".
 */
export interface AboutRegulationsPage {
  id: number;
  blocks: {
    title: string;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    contentMarkdown: string;
    id?: string | null;
    blockName?: string | null;
    blockType: 'paragraph';
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav_select".
 */
export interface NavSelect<T extends boolean = true> {
  entry?:
    | T
    | {
        NavDropdown?:
          | T
          | {
              title?: T;
              displayIcon?: T;
              entries?:
                | T
                | {
                    LinkItem?:
                      | T
                      | {
                          displayText?: T;
                          targetLink?: T;
                          displayIcon?: T;
                          id?: T;
                          blockName?: T;
                        };
                    NestedDropdown?:
                      | T
                      | {
                          title?: T;
                          displayIcon?: T;
                          entries?:
                            | T
                            | {
                                LinkItem?:
                                  | T
                                  | {
                                      displayText?: T;
                                      targetLink?: T;
                                      displayIcon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                    VisualDivider?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        LinkItem?:
          | T
          | {
              displayText?: T;
              targetLink?: T;
              displayIcon?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  item?:
    | T
    | {
        twoBlocks?: T | TwoBlocksBlockSelect<T>;
        fullWidth?: T | FullWidthBlockSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksBlock_select".
 */
export interface TwoBlocksBlockSelect<T extends boolean = true> {
  type?: T;
  alignment?: T;
  blocks?:
    | T
    | {
        TextCard?: T | TextCardBlockSelect<T>;
        AnnouncementsSection?: T | AnnouncementsSectionBlockSelect<T>;
        ImageBanner?: T | ImageBannerBlockSelect<T>;
        ImageOnlyCard?: T | ImageOnlyCardBlockSelect<T>;
        TestimonialsSpinner?: T | TestimonialsBlockSelect<T>;
        FeaturedCompetitions?: T | FeaturedCompetitionsBlockSelect<T>;
        twoBlocksBranch?: T | TwoBlocksBranchBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextCardBlock_select".
 */
export interface TextCardBlockSelect<T extends boolean = true> {
  heading?: T;
  body?: T;
  variant?: T;
  separatorAfterHeading?: T;
  buttonText?: T;
  buttonLink?: T;
  headerImage?: T;
  colorPalette?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AnnouncementsSectionBlock_select".
 */
export interface AnnouncementsSectionBlockSelect<T extends boolean = true> {
  mainAnnouncement?: T;
  furtherAnnouncements?: T;
  colorPalette?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBannerBlock_select".
 */
export interface ImageBannerBlockSelect<T extends boolean = true> {
  heading?: T;
  body?: T;
  mainImage?: T;
  colorPalette?: T;
  bgColor?: T;
  headingColor?: T;
  textColor?: T;
  bgImage?: T;
  bgSize?: T;
  bgPos?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageOnlyCardBlock_select".
 */
export interface ImageOnlyCardBlockSelect<T extends boolean = true> {
  mainImage?: T;
  heading?: T;
  colorPalette?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        TestimonialSlide?: T | TestimonialSlideBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialSlideBlock_select".
 */
export interface TestimonialSlideBlockSelect<T extends boolean = true> {
  testimonial?: T;
  colorPalette?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedCompetitionsBlock_select".
 */
export interface FeaturedCompetitionsBlockSelect<T extends boolean = true> {
  Competition1ID?: T;
  colorPalette1?: T;
  Competition2ID?: T;
  colorPalette2?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksBranchBlock_select".
 */
export interface TwoBlocksBranchBlockSelect<T extends boolean = true> {
  type?: T;
  alignment?: T;
  blocks?:
    | T
    | {
        TextCard?: T | TextCardBlockSelect<T>;
        AnnouncementsSection?: T | AnnouncementsSectionBlockSelect<T>;
        ImageBanner?: T | ImageBannerBlockSelect<T>;
        ImageOnlyCard?: T | ImageOnlyCardBlockSelect<T>;
        TestimonialsSpinner?: T | TestimonialsBlockSelect<T>;
        FeaturedCompetitions?: T | FeaturedCompetitionsBlockSelect<T>;
        twoBlocksLeaf?: T | TwoBlocksLeafBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoBlocksLeafBlock_select".
 */
export interface TwoBlocksLeafBlockSelect<T extends boolean = true> {
  type?: T;
  alignment?: T;
  blocks?:
    | T
    | {
        TextCard?: T | TextCardBlockSelect<T>;
        AnnouncementsSection?: T | AnnouncementsSectionBlockSelect<T>;
        ImageBanner?: T | ImageBannerBlockSelect<T>;
        ImageOnlyCard?: T | ImageOnlyCardBlockSelect<T>;
        TestimonialsSpinner?: T | TestimonialsBlockSelect<T>;
        FeaturedCompetitions?: T | FeaturedCompetitionsBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FullWidthBlock_select".
 */
export interface FullWidthBlockSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        TextCard?: T | TextCardBlockSelect<T>;
        AnnouncementsSection?: T | AnnouncementsSectionBlockSelect<T>;
        ImageBanner?: T | ImageBannerBlockSelect<T>;
        ImageOnlyCard?: T | ImageOnlyCardBlockSelect<T>;
        TestimonialsSpinner?: T | TestimonialsBlockSelect<T>;
        FeaturedCompetitions?: T | FeaturedCompetitionsBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us-page_select".
 */
export interface AboutUsPageSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        callToAction?:
          | T
          | {
              content?: T;
              contentMarkdown?: T;
              buttons?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        simpleItem?:
          | T
          | {
              title?: T;
              image?: T;
              content?: T;
              contentMarkdown?: T;
              id?: T;
              blockName?: T;
            };
        quote?:
          | T
          | {
              content?: T;
              contentMarkdown?: T;
              quotedPerson?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-page_select".
 */
export interface PrivacyPageSelect<T extends boolean = true> {
  preamble?: T;
  preambleMarkdown?: T;
  blocks?:
    | T
    | {
        privacyItem?:
          | T
          | {
              title?: T;
              content?: T;
              contentMarkdown?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "disclaimer-page_select".
 */
export interface DisclaimerPageSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        disclaimerItem?:
          | T
          | {
              title?: T;
              content?: T;
              contentMarkdown?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "speedcubing-history-page_select".
 */
export interface SpeedcubingHistoryPageSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        paragraph?:
          | T
          | {
              content?: T;
              contentMarkdown?: T;
              id?: T;
              blockName?: T;
            };
        captionedImage?:
          | T
          | {
              caption?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        quote?:
          | T
          | {
              content?: T;
              contentMarkdown?: T;
              quotedPerson?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-regulations-page_select".
 */
export interface AboutRegulationsPageSelect<T extends boolean = true> {
  blocks?:
    | T
    | {
        paragraph?:
          | T
          | {
              title?: T;
              content?: T;
              contentMarkdown?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}