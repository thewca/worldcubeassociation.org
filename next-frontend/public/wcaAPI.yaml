openapi: 3.1.0
title: WCA API Documentation
summary: Documentation of the WCA API, currently in progress
description: The WCA API allows developers to access data from the WCA using oidc
contact:
  name: WCA Software Team
  url: https://www.worldcubeassociation.org
  email: software@worldcubeassociation.org
version: 0.0.1
servers:
  - url: http://localhost:3000/api/v0
    description: The production API server
paths:
  /competitions/{competitionId}/:
    get:
      summary: Get competition details
      parameters:
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionInfo'
  /competitions/{competitionId}/events:
    get:
      summary: Get competition events in WCIF v0 format
      parameters:
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WcifEvent'
  /competitions/{competitionId}/registrations:
    get:
      summary: Get competition registrations
      parameters:
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegistrationData'
  /competition_index:
    get:
      summary: Get a list of (upcoming) competitions for table display
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompetitionIndex'
  /persons/{wca_id}/:
    get:
      summary: Get information for a person
      parameters:
        - name: wca_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonInfo'
  /persons/{wca_id}/results:
    get:
      summary: Get results for a person
      parameters:
        - name: wca_id
          in: path
          required: true
          schema:
            type: string
        - name: event_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'

  /user_roles:
    get:
      summary: Get user roles
      parameters:
        - name: isActive
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is active
        - name: isGroupHidden
          in: query
          schema:
            type: boolean
          description: Filter by whether the group is hidden
        - name: userId
          in: query
          schema:
            type: integer
          description: Filter by user ID
        - name: groupId
          in: query
          schema:
            type: integer
          description: Filter by group ID
        - name: status
          in: query
          schema:
            type: string
          description: Filter by metadata status (e.g., "chair")
        - name: groupType
          in: query
          schema:
            type: string
          description: Filter by group type (e.g., "officers")
        - name: isLead
          in: query
          schema:
            type: boolean
          description: Filter by whether the user is the lead of the group
        - name: sort
          in: query
          schema:
            type: string
          description: Sort by a specific field (e.g., "start_date", "-created_at")
        - name: perPage
          in: query
          schema:
            type: integer
            default: 100
          description: Number of results per page
      responses:
        '200':
          description: A list of user roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'

  /regulations/translations:
    get:
      summary: Gets all translations of regulations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegulationsTranslations'
  /export/public:
    get:
      summary: Get Export Information
      operationId: getExports
      responses:
        "200":
          description: Successfully retrieved exports
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportInfo"
  /users/me/permissions:
    get:
      summary: Get user's permissions
      operationId: getUserPermissions
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully retrieved permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermissions"
        "401":
          description: Unauthorized

  /regional-organizations:
    get:
      summary: A list of currently acknowledged regional organizations
      operationId: getOrganizations
      responses:
        "200":
          description: Retrieved organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegionalOrganization"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRole:
      type: object
      required:
        - id
        - start_date
        - end_date
        - group
        - user
        - metadata
      properties:
        id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        group:
          $ref: '#/components/schemas/UserGroup'
        user:
          $ref: '#/components/schemas/Person'
        metadata:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            email:
              type: string
              format: email
        class:
          type: string

    UserGroup:
      type: object
      required:
        - id
        - name
        - group_type
        - is_active
        - is_hidden
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        group_type:
          type: string
        parent_group_id:
          type: integer
          nullable: true
        is_active:
          type: boolean
        is_hidden:
          type: boolean
        metadata_id:
          type: integer
          nullable: true
        metadata_type:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        lead_user:
          $ref: '#/components/schemas/Person'
        metadata:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            email:
              type: string
              format: email

    RegionalOrganization:
      type: object
      required:
        - name
        - country_iso2
        - website
      properties:
        name:
          type: string
        country_iso2:
          type: string
        website:
          type: string
        logo_url:
          type: string
          format: uri

    Person:
      type: object
      required:
        - id
        - name
        - wca_id
        - country_iso2
        - delegate_status
        - teams
        - url
        - avatar
      properties:
        id:
          type: integer
          example: 267
        name:
          type: string
          example: "Tim Reynolds"
        gender:
          type: string
          example: "m"
        wca_id:
          type: string
          example: "2005REYN01"
        country_iso2:
          type: string
          example: "US"
        delegate_status:
          type: string
          example: "delegate"
        teams:
          type: array
          items:
            $ref: '#/components/schemas/TeamMembership'
        url:
          type: string
          format: uri
          example: "https://www.worldcubeassociation.org/persons/2005REYN01"
        avatar:
          $ref: '#/components/schemas/UserAvatar'

    TeamMembership:
      type: object
      required:
        - id
        - friendly_id
        - leader
        - senior_member
      properties:
        id:
          type: integer
        friendly_id:
          type: string
          example: "wst"
        leader:
          type: boolean
        senior_member:
          type: boolean
        name:
          type: string
        wca_id:
          type: string
        avatar:
          $ref: '#/components/schemas/UserAvatar'

    RegulationsTranslations:
      type: object
      required:
        - current
        - outdated
      properties:
        current:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        outdated:
          type: array
          items:
            $ref: '#/components/schemas/Translation'

    Translation:
      type: object
      required:
        - version
        - language
        - language_english
        - url
      properties:
        version:
          type: string
        language:
          type: string
        language_english:
          type: string
        url:
          type: string

    UserAvatar:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          example: "https://avatars.worldcubeassociation.org/uploads/user/avatar/2099EXAM/1535183030.jpg"
        thumb_url:
          type: string
          format: uri
          example: "https://avatars.worldcubeassociation.org/uploads/user/avatar/2099EXAM/1535183030_thumb.jpg"

    Organizer:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            delegate_status:
              type: string
              example: "regional_delegate"
            email:
              type: string
              format: email
              example: "255@worldcubeassociation.org"
            avatar:
              $ref: '#/components/schemas/UserAvatar'

    ExportInfo:
      type: object
      required:
        - export_date
        - sql_url
        - sql_filesize_bytes
        - tsv_url
        - tsv_filesize_bytes
        - readme
      properties:
        export_date:
          type: string
          format: date
        sql_url:
          type: string
          format: uri
        sql_filesize_bytes:
          type: number
        tsv_url:
          type: string
          format: uri
        tsv_filesize_bytes:
          type: number
        readme:
          type: string
        developer_url:
          type: string
          format: uri

    Rank:
      type: object
      required:
        - id
        - person_id
        - event_id
        - best
        - world_rank
        - continent_rank
        - country_rank
      properties:
        id:
          type: integer
        person_id:
          type: string
        event_id:
          type: string
        best:
          type: integer
        world_rank:
          type: integer
        continent_rank:
          type: integer
        country_rank:
          type: integer

    Medals:
      type: object
      required:
        - gold
        - silver
        - bronze
        - total
      properties:
        gold:
          type: integer
        silver:
          type: integer
        bronze:
          type: integer
        total:
          type: integer

    Records:
      type: object
      required:
        - national
        - continental
        - world
        - total
      properties:
        national:
          type: integer
        continental:
          type: integer
        world:
          type: integer
        total:
          type: integer

    PersonInfo:
      type: object
      required:
        - person
        - medals
        - records
        - personal_records
        - championship_podiums
        - competition_count
      properties:
        person:
          $ref: '#/components/schemas/Person'
        previous_persons:
          type: array
          items:
            type: object
        ranks_single:
          type: array
          items:
            $ref: '#/components/schemas/Rank'
        ranks_average:
          type: array
          items:
            $ref: '#/components/schemas/Rank'
        medals:
          $ref: '#/components/schemas/Medals'
        records:
          $ref: '#/components/schemas/Records'
        personal_records:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SingleAndAverageRank'
        championship_podiums:
          type: object
          properties:
            world:
              type: array
              items:
                type: object
            continental:
              type: array
              items:
                type: object
            greater_china:
              type: array
              items:
                type: object
            national:
              type: array
              items:
                type: object
        competition_count:
          type: integer

    SingleAndAverageRank:
      type: object
      required:
        - average
        - single
      properties:
        average:
          $ref: "#/components/schemas/Rank"
        single:
          $ref: "#/components/schemas/Rank"

    CompetitionIndex:
      type: object
      required:
        - id
        - name
        - short_display_name
        - start_date
        - end_date
        - registration_open
        - registration_close
        - announced_at
        - country_iso2
        - city
        - venue
        - latitude_degrees
        - longitude_degrees
        - event_ids
        - main_event_id
        - competitor_limit
        - championship_types
      properties:
        id:
          type: string
        name:
          type: string
        short_display_name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        registration_open:
          type: string
          format: date-time
        registration_close:
          type: string
          format: date-time
        announced_at:
          type: string
          format: date-time
        country_iso2:
          type: string
        city:
          type: string
        venue:
          type: string
        latitude_degrees:
          type: number
          format: float
        longitude_degrees:
          type: number
          format: float
        event_ids:
          type: array
          items:
            type: string
        main_event_id:
          type: string
        competitor_limit:
          type: integer
        championship_types:
          type: array
          items:
            type: string
            example: 'world'
        results_submitted_at:
          type: string
          format: date-time
        results_posted_at:
          type: string
          format: date-time
        report_posted_at:
          type: string
          format: date-time
        report_posted_by_user:
          type: integer
        delegates:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - avatar
            properties:
              id:
                type: integer
              name:
                type: string
              avatar:
                $ref: '#/components/schemas/UserAvatar'


    CompetitionInfo:
      type: object
      required:
        - id
        - name
        - information
        - venue
        - contact
        - registration_open
        - registration_close
        - use_wca_registration
        - guests_enabled
        - announced_at
        - base_entry_fee_lowest_denomination
        - currency_code
        - start_date
        - end_date
        - enable_donations
        - competitor_limit
        - extra_registration_requirements
        - on_the_spot_registration
        - refund_policy_percent
        - refund_policy_limit_date
        - guests_entry_fee_lowest_denomination
        - qualification_results
        - external_registration_page
        - event_restrictions
        - waiting_list_deadline_date
        - event_change_deadline_date
        - guest_entry_status
        - allow_registration_edits
        - allow_registration_without_qualification
        - competitor_can_cancel
        - url
        - website
        - short_name
        - city
        - venue_address
        - venue_details
        - latitude_degrees
        - longitude_degrees
        - country_iso2
        - event_ids
        - main_event_id
        - number_of_bookmarks
        - using_payment_integrations?
        - uses_qualification?
        - uses_cutoff?
        - competition_series_ids
        - registration_full?
        - part_of_competition_series?
        - registration_full_and_accepted?
        - delegates
        - organizers
        - class
      properties:
        id:
          type: string
          example: "WC2003"
        name:
          type: string
          example: "WCA World Championship 2003"
        information:
          type: string
          example: "First WCA World Championship"
        venue:
          type: string
          example: "Toronto"
        contact:
          type: string
          format: uri
          example: "https://www.example.com"
        registration_open:
          type: string
          format: date-time
          example: "2025-01-03T14:00:00.000Z"
        registration_close:
          type: string
          format: date-time
          example: "2025-01-10T14:00:00.000Z"
        use_wca_registration:
          type: boolean
          example: true
        guests_enabled:
          type: boolean
          example: false
        announced_at:
          type: string
          format: date-time
          example: "2024-10-08T22:00:00.000Z"
        base_entry_fee_lowest_denomination:
          type: integer
          example: 12000
        currency_code:
          type: string
          example: "USD"
        start_date:
          type: string
          format: date
          example: "2025-07-03"
        end_date:
          type: string
          format: date
          example: "2025-07-06"
        enable_donations:
          type: boolean
          example: false
        competitor_limit:
          type: integer
          example: 2000
        extra_registration_requirements:
          type: string
          example: ""
        on_the_spot_registration:
          type: boolean
          example: false
        refund_policy_percent:
          type: integer
          example: 50
        refund_policy_limit_date:
          type: string
          format: date-time
          example: "2025-05-15T06:59:00.000Z"
        guests_entry_fee_lowest_denomination:
          type: integer
          example: 1000
        qualification_results:
          type: boolean
          example: true
        event_restrictions:
          type: boolean
          example: false
        cancelled_at:
          type: string
          nullable: true
        waiting_list_deadline_date:
          type: string
          format: date-time
          example: "2025-05-29T06:59:00.000Z"
        event_change_deadline_date:
          type: string
          format: date-time
          example: "2025-05-29T06:59:00.000Z"
        competitor_can_cancel:
          type: string
          example: "not_accepted"
        url:
          type: string
          format: uri
          example: "https://www.worldcubeassociation.org/competitions/WC2003"
        website:
          type: string
          format: uri
          example: "https://cubingusa.org/worlds"
        city:
          type: string
          example: "Seattle, Washington"
        venue_address:
          type: string
          example: "770 Don Mills Rd, North York, ON M3C IT3, Canada"
        venue_details:
          type: string
          example: "The big convention center"
        latitude_degrees:
          type: number
          format: float
          example: 47.611387
        longitude_degrees:
          type: number
          format: float
          example: -122.332554
        country_iso2:
          type: string
          example: "US"
        event_ids:
          type: array
          items:
            type: string
          example: [ "333" ]
        main_event_id:
          type: string
          example: "333"
        number_of_bookmarks:
          type: integer
          example: 123
        uses_qualification?:
          type: boolean
        registration_full?:
          type: boolean
          example: true
        delegates:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        organizers:
          type: array
          items:
            $ref: '#/components/schemas/Organizer'

    CompetitionPermissions:
      oneOf:
        - type: array
          items:
            type: string
        - type: string
          format: "Wildcard"
          enum: "*"

    UserPermissions:
      type: object
      required:
        - can_access_panels
        - can_administer_competitions
        - can_attend_competitions
        - can_create_groups
        - can_edit_delegate_report
        - can_edit_groups
        - can_organize_competitions
        - can_read_groups_current
        - can_read_groups_past
        - can_request_to_edit_others_profile
        - can_view_delegate_admin_page
        - can_view_delegate_report
      properties:
        can_attend_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
            until:
              type: string
              format: date-time
              nullable: true
        can_organize_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_administer_competitions:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_view_delegate_admin_page:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_view_delegate_report:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_edit_delegate_report:
          type: object
          required:
            - scope
          properties:
            scope:
              $ref: "#/components/schemas/CompetitionPermissions"
        can_create_groups:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_read_groups_current:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_read_groups_past:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_edit_groups:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_access_panels:
          type: object
          required:
            - scope
          properties:
            scope:
              type: array
              items:
                type: string
        can_request_to_edit_others_profile:
          type: object
          required:
            - scope
          properties:
            scope:
              oneOf:
                - type: array
                  items:
                    type: string
                - type: string
                  format: "Wildcard"
                  enum: "*"

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email

    Results:
      type: array
      items:
        $ref: "#/components/schemas/Result"

    Result:
      type: object
      required:
        - id
        - pos
        - best
        - average
        - name
        - country_iso2
        - competition_id
        - event_id
        - round_type_id
        - format_id
        - wca_id
        - attempts
        - best_index
        - worst_index
        - regional_single_record
        - regional_average_record
      properties:
        id:
          type: integer
        pos:
          type: integer
        best:
          type: integer
        average:
          type: integer
        name:
          type: string
        country_iso2:
          type: string
        competition_id:
          type: string
        event_id:
          type: string
        round_type_id:
          type: string
        format_id:
          type: string
        wca_id:
          type: string
        attempts:
          type: array
          items:
            type: integer
        best_index:
          type: integer
        worst_index:
          type: integer
        regional_single_record:
          type: string
          nullable: true
        regional_average_record:
          type: string
          nullable: true

    PersonalRecord:
      type: object
      properties:
        eventId:
          type: string
        bestTime:
          type: integer
          description: Best performance in milliseconds
        averageTime:
          type: integer
          description: Average performance in milliseconds

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    RegistrationData:
      type: object
      properties:
        id:
          type: integer
        competition_id:
          type: string
        user_id:
          type: integer
        event_ids:
          type: array
          items:
            type: string
      required:
        - id
        - competition_id
        - user_id
        - event_ids

    WcifEvent:
      type: object
      properties:
        id:
          type: string
          example: '333'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/WcifRound'
        competitorLimit:
          type: integer
        qualification:
          $ref: '#/components/schemas/WcifQualification'
        extensions:
          type: array
      required:
        - id
        - rounds
        - extensions

    WcifRound:
      type: object
      properties:
        id:
          type: string
          example: "333-r1"
        format:
          type: string
          enum: [ '1', '2', '3', 'a', 'm' ]
        timeLimit:
          $ref: '#/components/schemas/WcifTimeLimit'
        cutoff:
          $ref: '#/components/schemas/WcifCutoff'
        advancementCondition:
          $ref: '#/components/schemas/WcifAdvancementCondition'
        results:
          type: array
          items:
            $ref: '#/components/schemas/WcifResult'
        scrambleSetCount:
          type: integer
        scrambleSets:
          type: array
          items:
            $ref: '#/components/schemas/WcifScrambleSet'
        extensions:
          type: array
      required:
        - id
        - format
        - results
        - scrambleSetCount
        - scrambleSets
        - extensions

    WcifQualification:
      oneOf:
        - $ref: '#/components/schemas/WcifQualificationAttemptResult'
        - $ref: '#/components/schemas/WcifQualificationRanking'
        - $ref: '#/components/schemas/WcifQualificationAnyResult'
      discriminator:
        propertyName: type
        mapping:
          attemptResult: '#/components/schemas/WcifQualificationAttemptResult'
          ranking: '#/components/schemas/WcifQualificationRanking'
          anyResult: '#/components/schemas/WcifQualificationAnyResult'

    WcifQualificationAttemptResult:
      type: object
      properties:
        whenDate:
          type: string
          format: date
        type:
          type: string
          example: "attemptResult"
        resultType:
          type: string
          enum: [ 'single', 'average' ]
        level:
          $ref: '#/components/schemas/WcifAttemptResult'
      required:
        - whenDate
        - type
        - resultType
        - level

    WcifQualificationRanking:
      type: object
      properties:
        whenDate:
          type: string
          format: date
        type:
          type: string
          example: "ranking"
        resultType:
          type: string
          enum: [ 'single', 'average' ]
        level:
          $ref: '#/components/schemas/WcifRanking'
      required:
        - whenDate
        - type
        - resultType
        - level

    WcifQualificationAnyResult:
      type: object
      properties:
        whenDate:
          type: string
          format: date
        type:
          type: string
          example: "anyResult"
        resultType:
          type: string
          enum: [ 'single', 'average' ]
      required:
        - whenDate
        - type
        - resultType

    WcifTimeLimit:
      type: object
      properties:
        centiseconds:
          type: integer
          example: 18000
        cumulativeRoundIds:
          type: array
          items:
            type: string
      required:
        - centiseconds
        - cumulativeRoundIds

    WcifCutoff:
      type: object
      properties:
        numberOfAttempts:
          type: integer
          example: 2
        attemptResult:
          $ref: '#/components/schemas/WcifAttemptResult'
      required:
        - numberOfAttempts
        - attemptResult

    WcifAdvancementCondition:
      oneOf:
        - $ref: '#/components/schemas/WcifAdvancementConditionRanking'
        - $ref: '#/components/schemas/WcifAdvancementConditionPercent'
        - $ref: '#/components/schemas/WcifAdvancementConditionAttemptResult'
      discriminator:
        propertyName: type
        mapping:
          ranking: '#/components/schemas/WcifAdvancementConditionRanking'
          percent: '#/components/schemas/WcifAdvancementConditionPercent'
          attemptResult: '#/components/schemas/WcifAdvancementConditionAttemptResult'

    WcifAdvancementConditionRanking:
      type: object
      properties:
        type:
          type: string
          example: "ranking"
        level:
          $ref: '#/components/schemas/WcifRanking'
      required:
        - type
        - level

    WcifAdvancementConditionPercent:
      type: object
      properties:
        type:
          type: string
          example: "percent"
        level:
          $ref: '#/components/schemas/WcifPercent'
      required:
        - type
        - level

    WcifAdvancementConditionAttemptResult:
      type: object
      properties:
        type:
          type: string
          example: "attemptResult"
        level:
          $ref: '#/components/schemas/WcifAttemptResult'
      required:
        - type
        - level

    WcifResult:
      type: object
      properties:
        personId:
          type: integer
          example: 1
        ranking:
          type: integer
          example: 10
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/WcifAttempt'
        best:
          $ref: '#/components/schemas/WcifAttemptResult'
        average:
          $ref: '#/components/schemas/WcifAttemptResult'
      required:
        - personId
        - attempts
        - best
        - average

    WcifScrambleSet:
      type: object
      properties:
        id:
          type: integer
          example: 1
        scrambles:
          type: array
          items:
            $ref: '#/components/schemas/WcifScramble'
        extraScrambles:
          type: array
          items:
            $ref: '#/components/schemas/WcifScramble'
      required:
        - id
        - scrambles
        - extraScrambles

    WcifAttemptResult:
      type: integer

    WcifAttempt:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/WcifAttemptResult'
        reconstruction:
          type: string
      required:
        - result

    WcifRanking:
      type: integer

    WcifPercent:
      type: integer

    WcifScramble:
      type: string
