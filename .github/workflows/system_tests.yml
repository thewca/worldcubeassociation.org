name: System Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RACK_ENV: test
      RAILS_ENV: test
      NODE_ENV: test
      PORT: 3000
      PAYLOAD_SECRET: amazing-payload-secret
      DISABLE_SPRING: 1
      CAPYBARA_APP_HOST: "" # Explicitly set a blank value to override our default Docker container setup
      NEW_RELIC_APP_NAME: wca_system_tests
      NEW_RELIC_ENABLED: false
    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2 # set up dummy user.name and user.email in git so that Overcommit doesn't explode
      - name: Set up ImageMagick and Libvips # This is not included in GitHub runners by default anymore
        run: |
          sudo apt update
          sudo apt install --no-install-recommends imagemagick libvips
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Install fresh Bundler packages
        run: bin/bundle install
      - name: Set up Corepack/Yarn
        run: corepack enable # this allows NPM to use its own Yarn. It is crucial that this is run BEFORE the Node setup!
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Install fresh Yarn packages
        run: bin/yarn install
      - name: Run Overcommit commit hooks
        run: |
          gem install overcommit
          overcommit --sign
          overcommit --sign pre-commit
          overcommit --run
      - name: Activate MySQL # as per https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
        run: sudo systemctl start mysql.service
      - name: Populate database with seeds
        run: bin/rake db:reset
      - name: Pre-compile assets for frontend tests
        run: |
          bin/bundle exec i18n export
          bin/rake assets:precompile

      - name: Start Next.js server
        run: |
          cd next-frontend
          yarn install
          yarn run chakra:types && yarn run check:types
          yarn run lint
          yarn dev --port 3001
      - name: Wait for server
        run: |
          for i in {1..30}; do
            curl -sSf http://localhost:3001 && break
            echo "Waiting for Next.js..."
            sleep 2
          done
      - name: Install Playwright Browsers # as per https://playwright.dev/docs/ci#github-actions
        run: bin/yarn playwright install --with-deps
      - name: Run Playwright tests
        run: yarn playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
